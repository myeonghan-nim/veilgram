upstream veilgram_backend {
    server web:8000;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;
    location = /healthz { return 200 "ok\n"; add_header Content-Type text/plain; }

    return 301 https://$host$request_uri;
}

server {
    listen       443 ssl;
    http2        on;
    server_name  localhost;

    ssl_certificate      /etc/nginx/certs/veilgram.crt;
    ssl_certificate_key  /etc/nginx/certs/veilgram.key;
    ssl_protocols        TLSv1.2 TLSv1.3;
    ssl_ciphers          HIGH:!aNULL:!MD5;

    client_max_body_size 50M;

    add_header X-Frame-Options        "SAMEORIGIN"            always;
    add_header X-Content-Type-Options "nosniff"               always;
    add_header Referrer-Policy        "no-referrer-when-downgrade" always;

    add_header Access-Control-Allow-Origin  $http_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Vary "Origin" always;

    location / {
        if ($request_method = OPTIONS) { return 204; }

        proxy_http_version 1.1;
        proxy_set_header   Connection "";
        proxy_pass         http://veilgram_backend;

        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_read_timeout 90s;
        proxy_next_upstream error timeout http_502 http_503 http_504;
    }

    location /healthz {
        access_log off;
        return 200 'OK';
    }

    location ~ ^/api/ {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://veilgram_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /usr/share/nginx/html/static/;
    }
    location /media/ {
        alias /usr/share/nginx/html/media/;
    }
}
