x-veilgram-test-env: &veilgram-test-env
  env_file:
    - .env
  networks:
    - veilgram-test-net
  restart: "no"

services:
  test_db:
    image: postgres:15-alpine
    container_name: veilgram_test_db
    <<: *veilgram-test-env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    shm_size: "256m"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  test_redis:
    image: redis:6-alpine
    container_name: veilgram_test_redis
    <<: *veilgram-test-env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server","--appendonly","yes","--requirepass","${REDIS_PASSWORD}"]
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD","redis-cli","-a","${REDIS_PASSWORD}","ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  test_minio:
    image: minio/minio:latest
    container_name: veilgram_test_minio
    <<: *veilgram-test-env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: ["server","/data","--console-address",":9001"]
    volumes:
      - minio_test_data:/data

  test_minio_mc:
    image: minio/mc:latest
    container_name: veilgram_test_minio_mc
    <<: *veilgram-test-env
    depends_on: [test_minio]
    entrypoint:
      - /bin/sh
      - -eu
      - -c
      - >
        BUCKET="veilgram-test";
        i=1; while [ "$$i" -le 30 ]; do
          if mc alias set minio http://veilgram_test_minio:9000 "$${MINIO_ROOT_USER}" "$${MINIO_ROOT_PASSWORD}" >/dev/null 2>&1
            && mc ls minio >/dev/null 2>&1; then break; fi;
          echo "[mc-init] waiting for minio (test)... ($$i/30)"; sleep 2; i=$$((i+1));
        done;
        mc ls minio >/dev/null 2>&1 || { echo "[mc-init] ERROR: minio (test) not reachable"; exit 1; };
        mc mb -p "minio/$$BUCKET" || true
    restart: "no"

  test:
    build: { context: ., target: test }
    container_name: veilgram_test_runner
    <<: *veilgram-test-env
    depends_on:
      test_db:   { condition: service_healthy }
      test_redis:{ condition: service_started }
      test_minio:{ condition: service_started }
    # 운영과 분리된 엔드포인트/버킷/DB/Redis로 override
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@veilgram_test_db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@veilgram_test_redis:6379/0
      FEED_REDIS_URL: redis://:${REDIS_PASSWORD}@veilgram_test_redis:6379/0
      MINIO_ENDPOINT: http://veilgram_test_minio:9000
      MINIO_BUCKET: veilgram-test
      DEBUG: "1"
    volumes:
      - .:/app:cached
    command: ["pytest","-q","--maxfail=1","--disable-warnings"]

volumes:
  postgres_test_data:
  redis_test_data:
  minio_test_data:

networks:
  veilgram-test-net:
    driver: bridge
    internal: true
