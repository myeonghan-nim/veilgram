x-test-env: &test-env
  env_file: [.env.test]
  networks: [veilgram-test-net]
  restart: "no"

services:
  test_db:
    image: postgres:15-alpine
    container_name: veilgram_test_db
    <<: *test-env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    shm_size: "256m"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  test_redis:
    image: redis:6-alpine
    container_name: veilgram_test_redis
    <<: *test-env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server","--appendonly","yes","--requirepass","${REDIS_PASSWORD}"]
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD","redis-cli","-a","${REDIS_PASSWORD}","ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  test_minio:
    image: minio/minio:latest
    container_name: veilgram_test_minio
    <<: *test-env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: ["server","/data","--console-address",":9001"]
    volumes:
      - minio_test_data:/data

  test_minio_mc_mb:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z
    container_name: veilgram_test_minio_mc_mb
    <<: *test-env
    depends_on: [test_minio]
    environment:
      MC_HOST_minio: "http://${MINIO_ROOT_USER}:${MINIO_ROOT_PASSWORD}@veilgram_test_minio:9000"
    command: ["mb", "-p", "minio/${AWS_STORAGE_BUCKET_NAME:-veilgram-test}"]
    restart: "on-failure"

  test:
    build: { context: ., target: test }
    container_name: veilgram_test_runner
    <<: *test-env
    depends_on:
      test_db: { condition: service_healthy }
      test_redis: { condition: service_started }
      test_minio: { condition: service_started }
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@veilgram_test_db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@veilgram_test_redis:6379/0
      AWS_S3_ENDPOINT_URL: http://veilgram_test_minio:9000
      AWS_STORAGE_BUCKET_NAME: veilgram-test
      DEBUG: "1"
      OPENSEARCH_ENABLED: "0"
      CASSANDRA_ENABLED: "0"
    volumes:
      - .:/app:cached
    command: ["pytest","-q","--maxfail=1","--disable-warnings"]

volumes:
  postgres_test_data:
  redis_test_data:
  minio_test_data:

networks:
  veilgram-test-net:
    driver: bridge
    internal: true
