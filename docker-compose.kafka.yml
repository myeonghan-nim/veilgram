x-veilgram-env: &veilgram-env
  env_file: [.env]
  networks: [veilgram-net]
  restart: unless-stopped

services:
  kafka:
    image: bitnami/kafka:3
    container_name: veilgram_kafka
    <<: *veilgram-env
    expose: ["9092"]
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL","getent hosts kafka >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  feed_consumer_kafka:
    build: { context: ., target: app }
    container_name: veilgram_feed_consumer_kafka
    <<: *veilgram-env
    depends_on: [web, redis, db, kafka]
    environment: { FEED_BUS_DRIVER: kafka }
    command: ["python","manage.py","feed_consumer"]

volumes:
  kafka_data:

networks:
  veilgram-net:
    driver: bridge
